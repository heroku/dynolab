// Code generated by github.com/heroku/dynolab/init/seccomp/generate. DO NOT EDIT.

package seccomp

import (
	"syscall"
	"unsafe"
)

func init() {
	prog = &syscall.SockFprog{
		Len:    8,
		Filter: (*syscall.SockFilter)(unsafe.Pointer(&progData[0])),
	}
}

/*
	#
	# pseudo filter code start
	#
	# filter for arch x86_64 (3221225534)
	if ($arch == 3221225534)
	  # filter for syscall "unshare" (272) [priority: 65535]
	  if ($syscall == 272)
	    action ERRNO(1);
	  # default action
	  action ALLOW;
	# invalid architecture action
	action KILL;
	#
	# pseudo filter code end
	#
*/

// progData is the BFP program data.
var progData = []byte{0x20, 0x0, 0x0, 0x0, 0x4, 0x0, 0x0, 0x0, 0x15, 0x0, 0x0, 0x5, 0x3e, 0x0, 0x0, 0xc0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x35, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x40, 0x15, 0x0, 0x1, 0x0, 0x10, 0x1, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0xff, 0x7f, 0x6, 0x0, 0x0, 0x0, 0x1, 0x0, 0x5, 0x0, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}
